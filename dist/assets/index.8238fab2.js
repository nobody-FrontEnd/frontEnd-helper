import{d as m,q as v,r as p,c as h,w as c,u as a,o as g,j as n,a as i,t as x,cd as C,an as o,h as b,_ as k}from"./index.fa3829f9.js";import{C as w}from"./index.43fb823d.js";import{C as B,a as S}from"./index.b38161f7.js";import"./_commonjs-dynamic-modules.30ae7933.js";import"./MultiLineResult.eeac4e9b.js";import"./base64.25d9ff21.js";const N={class:"rabbit"},R={class:"option"},V=m({__name:"index",setup(D){const{t:l}=v(),_="A Free, Modern Toolbox, Built for Developers.",t=p("key"),s=p(),u=()=>{s.value.handleEncrypt()},y=r=>{if(r.length<=0)return o.warning("Please enter the plain text"),"";if(t.value.length<=0)return o.warning("Please enter the key"),"";try{return w.Rabbit.encrypt(r,t.value).toString()}catch(e){return o.error({key:"rabbit-error",content:e.message}),""}};return(r,e)=>{const d=b("a-input-password");return g(),h(a(C),{"max-width":1280},{one:c(()=>[n("div",N,[i(S,{ref_key:"cryptRef",ref:s,encrypt:y,type:a(B).ENC,sample:_},{option:c(()=>[n("p",R,[n("span",null,x(a(l)("cryptWrapper.key")),1),i(d,{value:t.value,"onUpdate:value":e[0]||(e[0]=f=>t.value=f),class:"passphrase opt",onChange:u},null,8,["value"])])]),_:1},8,["type"])])]),_:1})}}});const q=k(V,[["__scopeId","data-v-eeb9f5f8"]]);export{q as default};
